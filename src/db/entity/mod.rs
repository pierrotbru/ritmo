#![allow(non_camel_case_types)]

pub mod people;
pub mod books;
pub mod contents;
pub mod contents_types;
pub mod formats;
pub mod publishers;
pub mod roles;
pub mod series;
pub mod tags;
pub mod languages_names;
pub mod original_languages;
pub mod source_languages;
pub mod current_languages;
pub mod aliases;
pub mod books_contents;
pub mod books_people;
pub mod contents_people;
pub mod contents_tags;
pub mod books_tags;
pub mod contents_curr_lang;
pub mod contents_orig_lang;
pub mod contents_sourc_lang;
pub mod laverdure;
pub mod views;
pub mod v_books_people_details;
pub mod v_contents_people_details;
pub mod v_books_with_contents;
pub mod v_books_details;
pub mod v_contents_details;

// Centralized re-exports to break potential circular dependencies
pub use people::Entity as PeopleEntity;
pub use books::Entity as BooksEntity;
pub use contents::Entity as ContentsEntity;
pub use tags::Entity as TagsEntity;
pub use aliases::Entity as AliasesEntity;
pub use books_people::Entity as BooksPeopleEntity;
pub use contents_people::Entity as ContentsPeopleEntity;
pub use books_contents::Entity as BooksContentsEntity;
pub use contents_tags::Entity as ContentsTagsEntity;
pub use books_tags::Entity as BooksTagsEntity;
pub use contents_curr_lang::Entity as ContentsCurrLangEntity;
pub use contents_orig_lang::Entity as ContentsOrigLangEntity;
pub use contents_sourc_lang::Entity as ContentsSourcLangEntity;
pub use contents_types::Entity as ContentsTypesEntity;
pub use formats::Entity as FormatsEntity;
pub use publishers::Entity as PublishersEntity;
pub use roles::Entity as RolesEntity;
pub use series::Entity as SeriesEntity;
pub use languages_names::Entity as LanguagesNamesEntity;
pub use original_languages::Entity as OriginalLanguagesEntity;
pub use source_languages::Entity as SourceLanguagesEntity;
pub use current_languages::Entity as CurrentLanguagesEntity;
pub use views::Entity as ViewsEntity;
pub use v_books_people_details::Entity as BooksPeopleDetails;
pub use v_contents_people_details::Entity as ContentsPeopleDetails;
pub use v_books_with_contents::Entity as BooksWithContents;
pub use v_books_details::Entity as BooksDetails;
pub use v_contents_details::Entity as ContentsDetails;
